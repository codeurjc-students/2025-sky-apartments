name: Full Quality Check

on:
    pull_request:
        branches:
            - main
    workflow_dispatch:

jobs:
    backend-unit-integration:
        name: Backend Unit & Integration Check
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./backend
        steps:
            - uses: actions/checkout@v4
            - name: Set up Java
              uses: actions/setup-java@v4
              with:
                java-version: '17'
                distribution: 'temurin'
                cache: maven
                
            - name: Run Backend Unit Tests
              run: mvn test -Dtest='*UnitTest'
              
            - name: Run Backend Integration Tests
              run: mvn test -Dtest='*IntegrationTest'
            
    backend-e2e:
      name: Backend e2e Check
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v4
          - name: Set up Java
            uses: actions/setup-java@v4
            with:
              java-version: '17'
              distribution: 'temurin'
              cache: maven
              
          - name: Build backend application
            working-directory: ./backend
            run: mvn clean package -DskipTests
          
          - name: Start all services with Docker Compose
            run: docker compose up -d
              
          - name: Wait for all services to be ready
            run: |
              echo "Waiting for MySQL..."
              timeout 120 bash -c 'until docker exec $(docker ps -q -f name=mysql-apartments) mysqladmin ping -h"127.0.0.1" -uuser -ppassword --silent 2>/dev/null; do sleep 2; done'
              
              echo "Waiting for MinIO..."
              timeout 60 bash -c 'until curl -f http://localhost:9000/minio/health/live 2>/dev/null; do sleep 2; done'
              
              echo "Checking bucket of MinIO..."
              timeout 60 bash -c 'until docker logs $(docker ps -q -f name=mc) 2>&1 | grep -q "Bucket created successfully\|Bucket.*already exists\|already exists"; do sleep 2; done'

              echo "Waiting for la aplicación backend..."
              timeout 180 bash -c 'until curl -f http://localhost:8083/actuator/health 2>/dev/null; do sleep 3; done'
              
          - name: Run Backend E2E Tests against deployed services
            working-directory: ./backend
            run: mvn test -Dtest='*e2eTest'
            env:
              # Configurar para usar la aplicación desplegada
              BACKEND_BASE_URL: http://localhost:8083
              SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3303/apartmentsdb
              SPRING_DATASOURCE_USERNAME: user
              SPRING_DATASOURCE_PASSWORD: password
              MINIO_URL: http://localhost:9000
              MINIO_ACCESS_KEY: minioadmin
              MINIO_SECRET_KEY: minioadmin
              MINIO_BUCKET_NAME: apartments-images
              
          - name: Show service logs on failure
            if: failure()
            run: |
              echo "=== MySQL logs ==="
              docker logs $(docker ps -q -f name=mysql-apartments)
              echo "=== MinIO logs ==="
              docker logs $(docker ps -q -f name=minio)
              echo "=== MinIO MC logs ==="
              docker logs $(docker ps -q -f name=mc)
              echo "=== Backend Application logs ==="
              docker logs $(docker ps -q -f name=apartment)
              
          - name: Stop services
            if: always()
            run: docker-compose down -v

    frontend-integration:
        name: Frontend Integration Quality Check
        runs-on: ubuntu-latest
        services:
          mysql:
            image: mysql:8
            env:
              MYSQL_ROOT_PASSWORD: root
              MYSQL_DATABASE: skyapartments
              MYSQL_USER: user
              MYSQL_PASSWORD: pass
            ports:
              - 3306:3306
            options: >-
              --health-cmd="mysqladmin ping --silent"
        
        steps:
          - uses: actions/checkout@v4
          
          # Backend
          - uses: actions/checkout@v4
          - name: Set up Java
            uses: actions/setup-java@v4
            with:
              java-version: '17'
              distribution: 'temurin'
              cache: maven
              
          - name: Build backend application
            working-directory: ./backend
            run: mvn clean package -DskipTests
          
          - name: Start all services with Docker Compose
            run: docker compose up -d
              
          - name: Wait for all services to be ready
            run: |
              echo "Waiting for MySQL..."
              timeout 120 bash -c 'until docker exec $(docker ps -q -f name=mysql-apartments) mysqladmin ping -h"127.0.0.1" -uuser -ppassword --silent 2>/dev/null; do sleep 2; done'
              
              echo "Waiting for MinIO..."
              timeout 60 bash -c 'until curl -f http://localhost:9000/minio/health/live 2>/dev/null; do sleep 2; done'
              
              echo "Checking bucket of MinIO..."
              timeout 60 bash -c 'until docker logs $(docker ps -q -f name=mc) 2>&1 | grep -q "Bucket created successfully\|Bucket.*already exists\|already exists"; do sleep 2; done'

              echo "Waiting for la aplicación backend..."
              timeout 180 bash -c 'until curl -f http://localhost:8083/actuator/health 2>/dev/null; do sleep 3; done'
          
          # Frontend
          - name: Set up Node
            uses: actions/setup-node@v4
            with:
              node-version: 20

          - name: Install frontend dependencies
            working-directory: frontend
            run: npm ci

          - name: Run integration tests
            working-directory: frontend
            run: npm run test:integration
          
          - name: Show service logs on failure
            if: failure()
            run: |
              echo "=== MySQL logs ==="
              docker logs $(docker ps -q -f name=mysql-apartments)
              echo "=== MinIO logs ==="
              docker logs $(docker ps -q -f name=minio)
              echo "=== MinIO MC logs ==="
              docker logs $(docker ps -q -f name=mc)
              echo "=== Backend Application logs ==="
              docker logs $(docker ps -q -f name=apartment)
              
          - name: Stop services
            if: always()
            run: docker-compose down -v

    frontend-unit-e2e:
        name: Frontend Unit and E2E Quality Check
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: ./frontend
        steps:
            - uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                node-version: '20'

            - name: Install Dependencies
              run: npm install

            - name: Run Frontend Unit Tests
              run: npm run test:unit

            - name: Install Playwright Browsers
              run: npx playwright install

            - name: Start Frontend Server
              run: npm run start &
              
            - name: Wait for server to be ready
              run: |
                npx wait-on http://localhost:4200  

            - name: Run Frontend E2E Tests
              run: npm run test:e2e