name: Reusable Build and Push

on:
  workflow_call:
    inputs:
      docker_tag:
        required: true
        type: string
        description: 'Docker image tag'
      push_latest:
        required: false
        type: boolean
        default: false
        description: 'Also push as latest tag'
      compose_tag:
        required: true
        type: string
        description: 'Docker compose OCI artifact tag'
    secrets:
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image (with latest)
        if: ${{ inputs.push_latest }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/apartments-app:${{ inputs.docker_tag }}
            ${{ secrets.DOCKER_USERNAME }}/apartments-app:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/apartments-app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/apartments-app:buildcache,mode=max

      - name: Build and push Docker image (without latest)
        if: ${{ !inputs.push_latest }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/apartments-app:${{ inputs.docker_tag }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/apartments-app:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/apartments-app:buildcache,mode=max

      - name: Prepare docker-compose for OCI
        run: |
          cp docker/docker-compose.yml docker-compose-temp.yml
          sed -i "s/\${DOCKER_USERNAME}/${{ secrets.DOCKER_USERNAME }}/g" docker-compose-temp.yml
          sed -i "s/:0\.1/:${{ inputs.docker_tag }}/g" docker-compose-temp.yml

      - name: Create Dockerfile for compose artifact
        run: |
          cat > Dockerfile.compose <<EOF
          FROM scratch
          COPY docker-compose-temp.yml /docker-compose.yml
          EOF

      - name: Push docker-compose as OCI artifact (versioned)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.compose
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/apartments-compose:${{ inputs.compose_tag }}

      - name: Push docker-compose as OCI artifact (latest)
        if: ${{ inputs.push_latest }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.compose
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/apartments-compose:latest

      - name: Cleanup
        if: always()
        run: |
          rm -f docker-compose-temp.yml Dockerfile.compose

      - name: Output build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Docker Tag**: ${{ inputs.docker_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Compose Tag**: ${{ inputs.compose_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Push Latest**: ${{ inputs.push_latest }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Images Created:" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKER_USERNAME }}/apartments-app:${{ inputs.docker_tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ secrets.DOCKER_USERNAME }}/apartments-compose:${{ inputs.compose_tag }}\`" >> $GITHUB_STEP_SUMMARY
          if [ "${{ inputs.push_latest }}" == "true" ]; then
            echo "- \`${{ secrets.DOCKER_USERNAME }}/apartments-app:latest\`" >> $GITHUB_STEP_SUMMARY
            echo "- \`${{ secrets.DOCKER_USERNAME }}/apartments-compose:latest\`" >> $GITHUB_STEP_SUMMARY
          fi