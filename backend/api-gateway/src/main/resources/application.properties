spring.application.name=api-gateway

server.port=443

# Path: apartments
spring.cloud.gateway.server.webflux.routes[0].id=apartment
spring.cloud.gateway.server.webflux.routes[0].uri=lb://apartment
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/v1/apartments/**

# Path: bookings
spring.cloud.gateway.server.webflux.routes[1].id=booking
spring.cloud.gateway.server.webflux.routes[1].uri=lb://booking
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/api/v1/bookings/**

# Path: user
spring.cloud.gateway.server.webflux.routes[2].id=user
spring.cloud.gateway.server.webflux.routes[2].uri=lb://user
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/v1/users/**

# Path: auth
spring.cloud.gateway.server.webflux.routes[3].id=auth
spring.cloud.gateway.server.webflux.routes[3].uri=lb://user
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/api/v1/auth/**

spring.cloud.gateway.server.webflux.routes[4].id=frontend
spring.cloud.gateway.server.webflux.routes[4].uri=forward:/
spring.cloud.gateway.server.webflux.routes[4].predicates[0]=Path=/**
spring.cloud.gateway.server.webflux.routes[4].filters[0]=RewritePath=/(?<segment>.*), /$\{segment}
spring.cloud.gateway.server.webflux.routes[4].order=100

spring.web.resources.static-locations=${FRONTEND_STATIC_LOCATION:file:/app/static/}
spring.web.resources.add-mappings=true

spring.web.resources.cache.cachecontrol.max-age=3600
spring.web.resources.cache.cachecontrol.cache-public=true


spring.main.web-application-type=reactive


server.ssl.enabled=true
server.ssl.key-store=${SERVER_SSL_KEY_STORE:classpath:keystore.p12}
server.ssl.key-store-password=${SERVER_SSL_KEY_STORE_PASSWORD:changeit}
server.ssl.key-store-type=${SERVER_SSL_KEY_STORE_TYPE:PKCS12}
server.ssl.key-alias=${SERVER_SSL_KEY_ALIAS:mi-servidor}


eureka.client.service-url.defaultZone=${EUREKA_SERVER_URL:http://localhost:8761/eureka/}
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${random.value}

eureka.client.healthcheck.enabled=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true