version: "3.9"

services:

  mysql-users:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_USERS_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3305:3306"
    volumes:
      - mysql_users_data:/var/lib/mysql
    networks:
      - apartments-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mysql-apartments:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_APARTMENTS_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3303:3306"
    volumes:
      - mysql_apartments_data:/var/lib/mysql
    networks:
      - apartments-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  mysql-bookings:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_BOOKINGS_DB}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3302:3306"
    volumes:
      - mysql_bookings_data:/var/lib/mysql
    networks:
      - apartments-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    networks:
      - apartments-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

  mc:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
        sleep 5 &&
        mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
        mc mb -p local/${MINIO_BUCKET} || true &&
        mc anonymous set public local/${MINIO_BUCKET}
        tail -f /dev/null
      "
    networks:
      - apartments-network

  eureka-server:
    build:
      context: ./backend
      dockerfile: eureka-server/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - apartments-network
    environment:
      EUREKA_INSTANCE_HOSTNAME: eureka-server
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 40s
      
  api-gateway:
    build:
      context: ./backend
      dockerfile: api-gateway/Dockerfile
    environment:
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
    ports:
      - "8443:8443"
    networks:
      - apartments-network
    depends_on:
      eureka-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-fk", "https://localhost:8443/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  apartment:
    build:
      context: ./backend
      dockerfile: apartment/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-apartments:3306/${MYSQL_APARTMENTS_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
      JWT_SECRET: ${JWT_SECRET}
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
      OTLP_ENDPOINT: ${OTLP_ENDPOINT}
    depends_on:
      mysql-apartments:
        condition: service_healthy
      minio:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      jaeger:
        condition: service_started
    ports:
      - "8083:8083"
    networks:
      - apartments-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  user:
    build:
      context: ./backend
      dockerfile: user/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-users:3306/${MYSQL_USERS_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
      OTLP_ENDPOINT: ${OTLP_ENDPOINT}
    depends_on:
      mysql-users:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      jaeger:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - apartments-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  booking:
    build:
      context: ./backend
      dockerfile: booking/Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-bookings:3306/${MYSQL_BOOKINGS_DB}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      EUREKA_SERVER_URL: ${EUREKA_SERVER_URL}
      OTLP_ENDPOINT: ${OTLP_ENDPOINT}
    depends_on:
      mysql-bookings:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      jaeger:
        condition: service_started
    ports:
      - "8082:8082"
    networks:
      - apartments-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "4318:4318"
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    networks:
      - apartments-network
  
volumes:
  mysql_users_data:
  mysql_apartments_data:
  mysql_bookings_data:
  minio_data:

networks:
  apartments-network:
    driver: bridge
